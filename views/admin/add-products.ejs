<%- include('../layouts.ejs')%>

<div class="container-fluid p-0 min-vh-100" style="margin-top: 10%">
    <%- include('../partials/adminheader.ejs') %>

    <div class="container"  >
        <div class="row">
            <div class="col-md-6 mx-auto" style="background-color: rgb(60, 89, 177); border: 2px solid rgb(77, 80, 248); border-radius: 15px;height: 480px; box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset; color: whitesmoke;"> <!-- Center the form on medium screens -->
                <h2 class="text-center" id="pro-addheader">Add Products</h2>
                <% if (locals.msg) { %>
                    <div class="alert alert-success">
                        <strong><%= msg %> </strong>
                    </div>  
                <% } %>
                <p class="text-center text-success"><%= msg %></p>
                <p class="text-success text-center"></p>
                <form action="/admin/add-product" method="post" enctype="multipart/form-data" onsubmit="return validateForm()" id="add-pro">
                   <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="name">Name</label>
                            <input type="text" name="name" id="name" class="form-control">
                            <div id="name-error-messages" class="text-danger"></div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="category">Category</label>
                            <select class="form-select" name="category" id="category" aria-label="Default select example">
                                <% cateData.forEach((category) => { %>
                                <option value="<%= category.categoryName %> "><%= category.categoryName %></option>
                                <% }) %>
                            </select>
                            <div id="category-error-messages" class="text-danger"></div>

                        </div>
                    </div>
                   </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="originalprice">Price</label>
                                <input type="number" name="originalprice" id="originalprice" class="form-control">
                                <div id="price-error-messages" class="text-danger"></div>

                            </div>
                        </div>
    
                       <div class="col-md-6">
                        <div class="mb-3">
                            <label for="offers">Offers</label>
                            <input type="number" name="offers" id="offers" class="form-control">
                            <div id="offers-error-messages" class="text-danger"></div>
                        </div>
                       </div>
                    </div>

                   <div class="row">
                    <div class="mb-3 col-md-6">
                        <label for="quantity">Quantity</label>
                        <input type="number" name="quantity" id="quantity" class="form-control">
                        <div id="quantity-error-messages" class="text-danger"></div>
                    </div>

                    <div class="mb-3 col-md-6">
                        <label for="discription">Description</label>
                        <input type="text" name="discription" id="discription" class="form-control">
                        <div id="discription-error-messages" class="text-danger"></div>
                    </div>
                   </div>

                    <div class="mb-3">
                        <label for="image">Image</label>
                        <input type="file" name="image" id="formFileMultiple" class="form-control" multiple>
                        <div id="image-error-messages" class="text-danger"></div>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-success mt-4">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function validateForm() {
        const name = document.getElementById("name").value;
        const category = document.getElementById("category").value;
        const originalprice = document.getElementById("originalprice").value;
        const offers = document.getElementById("offers").value;
        const quantity = document.getElementById("quantity").value;
        const discription = document.getElementById("discription").value;
        const image = document.getElementById("formFileMultiple").files[0];

        // const errorMessages = document.getElementById("error-messages");
        // errorMessages.innerHTML = ""; // Clear previous error messages
        const e_name = document.getElementById('name-error-messages')
        const e_category = document.getElementById('category-error-messages')
        const e_price = document.getElementById('price-error-messages')
        const e_offers = document.getElementById('offers-error-messages')
        const e_quantity = document.getElementById('quantity-error-messages')
        const e_discription = document.getElementById('discription-error-messages')
        const e_image = document.getElementById('image-error-messages')

        let isValid = true;

        // Validation for Name, Category, Price, Offers, Quantity, and Description
        if (name.trim() === "") {
            e_name.innerHTML = "Name is required.";
            // appendErrorMessage("Name is required.");
            // isValid = false;
        } else if (name.trim().length < 5) {
            e_name.innerHTML = "Name must be at least 3 characters.";
            // appendErrorMessage("Name must be at least 3 characters.");
            // isValid = false;
        } else if (name.trim().length) {
            e_name.innerHTML = " ";
        }

        if (category.trim() === " ") {
            // appendErrorMessage("Category is required.");
            e_category.innerHTML = "Category is required.";
            isValid = false;
        }

        if (originalprice.trim() === "") {
            // appendErrorMessage("Price is required.");
            e_price.innerHTML = "Price is required.";
            isValid = false;
        } else if (originalprice.trim().length) {
            e_price.innerHTML = " ";
        }

        if (offers.trim() === "") {
            // appendErrorMessage("Offers is required.");
            e_offers.innerHTML = "Offers is required.";
            isValid = false;
        } else if (offers.trim().length) {
            e_offers.innerHTML = " ";
        }

        if (quantity.trim() === "") {
            // appendErrorMessage("Quantity is required.");
            e_quantity.innerHTML = "Quantity is required.";
            isValid = false;
        } else if (quantity.trim().length) {
            e_quantity.innerHTML = " ";
        }

        if (discription.trim() === "") {
            // appendErrorMessage("Description is required.");
            e_discription.innerHTML = "Description is required.";
            isValid = false;
        }else if(discription.trim().length < 10){
            e_discription.innerHTML = "Description at least 10 characters.";
            isValid = false;
        }
         else if(discription.trim().length) {
            e_discription.innerHTML = " ";
        }

        // Image validation
        if (image) {
            const allowedExtensions = ["jpg", "png", "jpeg"];
            const maxSize = 5 * 1024 * 1024; // 5 MB

            const fileName = image.name.toLowerCase();
            const fileExtension = fileName.split(".").pop();

            if (!allowedExtensions.includes(fileExtension)) {
                // appendErrorMessage("Image must be in jpg, png, or jpeg format.");
                e_image.innerHTML = "Image must be in jpg, png, or jpeg format.";
                isValid = false;
            }

            if (image.size > maxSize) {
                // appendErrorMessage("Image size exceeds 5 MB.");
                e_image.innerHTML = "Image size exceeds 5 MB.";
                isValid = false;
            }
        }

        return isValid;
    }

    // function appendErrorMessage(message) {
    //     const errorMessages = document.getElementById("error-messages");
    //     const errorMessageElement = document.createElement("div");
    //     errorMessageElement.innerText = message;
    //     errorMessages.appendChild(errorMessageElement);
    // }
</script>











